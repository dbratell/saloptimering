<project name="SalOpt" default="dist" basedir=".">
    <description>
        Build SalOpt
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <path id="project.class.path">
<!--        <pathelement location="lib/servlet.jar"/>
        <pathelement location="lib/jmf.jar"/> -->
       <!-- <pathelement path="${java.class.path}/"/>
        <pathelement path="${additional.path}"/>       -->
    </path>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
           classpathref="project.class.path"
           debug="on" deprecation="on">
        <exclude name="**/test/**/*.java"/>
        </javac>
    <copy todir="${build}">
        <fileset dir="${src}/../resources">
            <include name="*.gif"/>
        </fileset>
    </copy>

  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <property name="jar.filename" value="salopt.jar"/>
<!--    <property name="war.filename" value="PictBook-${DSTAMP}.war"/> -->

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/${jar.filename}" basedir="${build}">
        <include name="**/*.class"/>
        <include name="**/*.gif"/>
        <exclude name="**/test/**"/>
    </jar>
    <!-- Pack into a web archive -->
<!--    <war destfile="${dist}/lib/${war.filename}" basedir="${build}/../web"
         webxml="WEB-INF/web.xml">
        <lib dir="${dist}/lib" >
            <include name="${jar.filename}"/>
        </lib>
    </war> -->
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>